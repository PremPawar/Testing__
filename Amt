 import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;

public class Main {
    public static void main(String[] args) {
        // Original response received from the backend
        Map<String, Integer> responseData = new HashMap<>();
        responseData.put("2024-03-14", 6736);
        responseData.put("2024-03-15", 7007);
        responseData.put("2024-03-18", 8707);
        responseData.put("2024-03-19", 7598);
        responseData.put("2024-03-20", 7693);
        responseData.put("2024-03-21", 70);

        // Process the response to add missing weekend dates with 0 value
        addWeekendDates(responseData);

        // Print the updated response
        System.out.println(responseData);
    }

    private static void addWeekendDates(Map<String, Integer> responseData) {
        // Determine the start date and end date dynamically
        LocalDate startDate = null;
        LocalDate endDate = null;
        for (String date : responseData.keySet()) {
            LocalDate currentDate = LocalDate.parse(date);
            if (startDate == null || currentDate.isBefore(startDate)) {
                startDate = currentDate;
            }
            if (endDate == null || currentDate.isAfter(endDate)) {
                endDate = currentDate;
            }
        }

        // Iterate over the dates from the start date to the end date
        for (LocalDate date = startDate; !date.isAfter(endDate); date = date.plusDays(1)) {
            // Check if the date is a weekend (Saturday or Sunday)
            if (date.getDayOfWeek() == DayOfWeek.SATURDAY || date.getDayOfWeek() == DayOfWeek.SUNDAY) {
                // Convert the date to the format used in the response and add double quotes
                String formattedDate = "\"" + date.toString() + "\"";
                // Check if the date is missing from the response
                if (!responseData.containsKey(formattedDate)) {
                    // Add the missing weekend date with a value of 0
                    responseData.put(formattedDate, 0);
                }
            }
        }
    }
}