<%@ page language="java" contentType="text/html; charset=ISO-8859-1" pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
    <title>Demo</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4"></script>
</head>
<body>
    <form id="myform">
        <p>
            <label style="margin-left:10px;font-size:14px;" for="fromdate">From Date:</label>
            &nbsp;&nbsp;
            <input type="datetime-local" id="fromdate" name="fromdate">

            <label style="margin-left:60px;font-size:14px;" for="todate">To Date:</label>
            &nbsp;&nbsp;
            <input type="datetime-local" id="todate" name="todate">

            <label style="margin-left:60px;font-size:14px;" for="queuedrop">Queue:</label>
            &nbsp;&nbsp;
            <select multiple="true" id="queuedrop" name="queuedrop" style="width:200px;" data-placeholder="Select Queues"></select>

            <label style="margin-left:60px;font-size:14px;" for="lob">LOB:</label>
            &nbsp;&nbsp;
            <select name="lob" id="lob" style="width:100px;" onchange="updateChart()">
                <option value="wealth">Wealth</option>
                <option value="health">Health</option>
            </select>
            <input type="submit" style="margin-left:60px;" class="centered2" id="stasubmit" value="Search">  
        </p>
    </form>

    <div id="chartContainer" style="margin-top: 50px;width:650px;height:300px;overflow: auto;">
        <canvas id="silencetopicsallChart" style="width:650px;height:1000px;"></canvas>
    </div>

    <script>
        var barColors = "darkorange";
        var ctx = document.getElementById("silencetopicsallChart").getContext('2d');
        
        // Define initial chart data (for Wealth)
        var initialChartData = {
            labels: [164, 244, 265, 296, 300, 346, 508, 840, 904, 1395],
            datasets: [{
                backgroundColor: barColors,
                data: [/* Define your initial Wealth data here */]
            }]
        };

        var silencetopicsallChart = new Chart(ctx, {
            type: "horizontalBar",
            data: initialChartData,
            options: {
                animation: {
                    duration: 1,
                    onComplete: function() {
                        var chartInstance = this.chart,
                            ctx = chartInstance.ctx;

                        ctx.font = this.chart.font;

                        ctx.textAlign = 'right';
                        ctx.textBaseline = 'top';

                        this.data.datasets.forEach(function(dataset, i) {
                            var meta = chartInstance.controller.getDatasetMeta(i);
                            meta.data.forEach(function(bar, index) {
                                var data = dataset.data[index];
                                ctx.fillText(data, bar._model.x, bar._model.y - 5);
                            });
                        });
                    }
                },
                legend: { display: false },
                title: {
                    display: true,
                    text: "Silence Time Topics"
                },
                scales: {
                    xAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Count',
                        }
                    }],
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Topics',
                        }
                    }]
                }
            }
        });

        // Function to update the chart based on selected LOB
        function updateChart() {
            var selectedLOB = document.getElementById("lob").value;
            var newData = getChartData(selectedLOB);
            silencetopicsallChart.data.labels = newData.labels;
            silencetopicsallChart.data.datasets[0].data = newData.data;
            silencetopicsallChart.update();
        }

        // Define function to get chart data based on LOB
        function getChartData(lob) {
            if (lob === "wealth") {
                return {
                    labels: [164, 244, 265, 296, 300, 346, 508, 840, 904, 1395],
                    data: [/* Define your Wealth data here */]
                };
            } else if (lob === "health") {
                return {
                    labels: [/* Define your Health labels here */],
                    data: [/* Define your Health data here */]
                };
            }
        }

        // Initial chart rendering for Wealth
        updateChart();
    </script>
</body>
</html>
