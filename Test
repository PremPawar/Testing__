\const [rows, setRows] = useState([{ selectedValue: '' }]);

  const getOptionsBasedOnValue = (selectedValue) => {
    if (selectedValue === 'Option 1') {
      return ['Option 1.1', 'Option 1.2', 'Option 1.3'];
    } else if (selectedValue === 'Option 2') {
      return ['Option 2.1', 'Option 2.2', 'Option 2.3'];
    } else {
      return [];
    }
  };

  const handleSelectionChange = (rowIndex, value) => {
    const updatedRows = [...rows];
    updatedRows[rowIndex].selectedValue = value;
    if (rowIndex === updatedRows.length - 1) {
      updatedRows.push({ selectedValue: '' });
    }
    setRows(updatedRows);
  };

  return (
    <div>
      {rows.map((row, index) => (
        <div key={index} className="flex space-x-4">
          <select
            value={row.selectedValue}
            onChange={(e) => handleSelectionChange(index, e.target.value)}
            className="border p-2"
          >
            <option value="">Select an option</option>
            <option value="Option 1">Option 1</option>
            <option value="Option 2">Option 2</option>
          </select>
          {index === rows.length - 1 && (
            <button onClick={() => setRows([...rows, { selectedValue: '' }])}>Add Row</button>
          )}
        </div>
      ))}
    </div>
  );
};
